
@model DataObjects.EmployeeVM

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm("Edit", "Employee", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.EmployeeID)
    @Html.HiddenFor(model => model.PositionID)
    <div class="m-auto w-50 text-center">
        <div class="card d-flex justify-content-center">
            <div class="card-header">
                @Model.FirstName @Model.LastName
            </div>
            <div class="card-body mx-auto vstack gap-3">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })

                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })

                @Html.LabelFor(model => model.Position.PositionTitle, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Position.PositionTitle, new { htmlAttributes = new { @class = "form-control", ReadOnly = true } })

                @Html.LabelFor(model => model.Position.PositionDescription, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Position.PositionDescription, new { htmlAttributes = new { @class = "form-control text-center ", ReadOnly = true, @style = "max-height: 5em; min-height: 5em" } })
            </div>
            <div class="m-2">
                <button type="submit" class="btn m-auto">Save</button>
                <a class="btn m-auto" href="@Url.Action("Index", "Employee")">Cancel</a>
            </div>
        </div>
    </div>
}