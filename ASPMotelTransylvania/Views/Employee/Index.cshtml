@model DataObjects.EmployeeVM

@{
    ViewBag.Title = "Employee Profile";
}
<div class="m-auto w-50 text-center">
    <div class="card d-flex justify-content-center">
        <div class="card-header">
            @Model.FirstName @Model.LastName
        </div>
        <div class="card-body mx-auto vstack gap-3">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control text-center", ReadOnly = true } })

            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control text-center", ReadOnly = true } })

            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control text-center", ReadOnly = true } })

            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control text-center", ReadOnly = true } })

            @Html.LabelFor(model => model.Position.PositionTitle, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Position.PositionTitle, new { htmlAttributes = new { @class = "form-control text-center ", ReadOnly = true } })

            @Html.LabelFor(model => model.Position.PositionDescription, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Position.PositionDescription, new { htmlAttributes = new { @class = "form-control text-center ", ReadOnly = true, @style = "max-height: 5em; min-height: 5em" } })

        </div>
        <div class="m-2">
            <a class="btn" href="@Url.Action("Edit", "Employee")">Edit Profile</a>
        </div>
    </div>
</div>
    

